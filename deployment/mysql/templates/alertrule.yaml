{{- if  .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: {{ include "mysql.fullname" . }}
spec:
  groups:
  - name: mysql-cluster
    rules:
    - expr: mysql_slave_status_seconds_behind_master{service='{{ include "mysql.fullname" . }}'} - mysql_slave_status_sql_delay{service='{{ include "mysql.fullname" . }}'}
      record: mysql_slave_lag_seconds
    - alert: MySQLReplicationNotRunning
      annotations:
        alertLevel: critical
        message: Slave replication (IO or SQL) has been down for more than 2 minutes.
        metric: mysql_slave_status_slave_io_running
        product: harmonycloud
        service: metrics
        summary: Slave replication is not running
      expr: mysql_slave_status_slave_io_running{service='{{ include "mysql.fullname" . }}'} == 0 or mysql_slave_status_slave_sql_running{service='{{ include "mysql.fullname" . }}'}
        == 0
      for: 2m
      labels:
        severity: critical
    - alert: MySQLReplicationLag
      annotations:
        alertLevel: critical
        message: The mysql slave replication has fallen behind and is not recovering
        metric: mysql_slave_lag_seconds
        product: harmonycloud
        service: metrics
        summary: MySQL slave replication is lagging
      expr: (mysql_slave_lag_seconds{service='{{ include "mysql.fullname" . }}'} > 30) and on(instance) (predict_linear(mysql_slave_lag_seconds{service='{{ include "mysql.fullname" . }}'}[5m],
        60 * 2) > 0)
      for: 1m
      labels:
        severity: critical
    - alert: MySQLInnoDBLogWaits
      annotations:
        alertLevel: warning
        message: The innodb logs are waiting for disk at a rate of {{`{{$value}}`}} second
        metric: mysql_global_status_innodb_log_waits
        product: harmonycloud
        service: metrics
        summary: MySQL innodb log writes stalling
      expr: rate(mysql_global_status_innodb_log_waits{service='{{ include "mysql.fullname" . }}'}[15m]) > 10
      labels:
        severity: warning
  - name: mysql-stats
    rules:
    - alert: MySQLInstanceDown
      annotations:
        alertLevel: critical
        message: MySQL Instance is down, This requires immediate action.
        metric: mysql_up
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} MySQL is down
      expr: mysql_up{service='{{ include "mysql.fullname" . }}'} == 0
      for: 1m
      labels:
        severity: critical
    - alert: MySQLOpenFilesHigh
      annotations:
        alertLevel: warning
        message: Open files is high, Please consider increasing open_files_limit.
        metric: mysql_global_status_innodb_num_open_files
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} open files high
      expr: mysql_global_status_innodb_num_open_files{service='{{ include "mysql.fullname" . }}'} > (mysql_global_variables_open_files_limit{service='{{ include "mysql.fullname" . }}'})
        * 0.75
      for: 1m
      labels:
        severity: warning
    - alert: MySQLReadBufferOutOfMaxAllow
      annotations:
        alertLevel: warning
        message: Read buffer size (read_buffer_size) is bigger than max. allowed packet
          size (max_allowed_packet).This can break your replication.
        metric: mysql_global_variables_read_buffer_size
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Read buffer size is bigger than max.
          allowed packet size
      expr: mysql_global_variables_read_buffer_size{service='{{ include "mysql.fullname" . }}'} > mysql_global_variables_slave_max_allowed_packet{service='{{ include "mysql.fullname" . }}'}
      for: 1m
      labels:
        severity: warning
    - alert: MySQLSortBufferMissconfigured
      annotations:
        alertLevel: warning
        message: Sort buffer size is either too big or too small. A good value for
          sort_buffer_size is between 256k and 4M.
        metric: mysql_global_variables_innodb_sort_buffer_size
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Sort buffer possibly missconfigured
      expr: mysql_global_variables_innodb_sort_buffer_size{service='{{ include "mysql.fullname" . }}'} <256*1024 or mysql_global_variables_read_buffer_size{service='{{ include "mysql.fullname" . }}'}
        > 4*1024*1024
      for: 1m
      labels:
        severity: warning
    - alert: MySQLThreadStackSizeTooSmall
      annotations:
        alertLevel: warning
        message: Thread stack size is too small. This can cause problems when you
          use Stored Language constructs for example. A typical is 256k for thread_stack_size.
        metric: mysql_global_variables_thread_stack
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Thread stack size is too small
      expr: mysql_global_variables_thread_stack{service='{{ include "mysql.fullname" . }}'} <196608
      for: 1m
      labels:
        severity: warning
    - alert: MySQLTooManyConnections
      annotations:
        alertLevel: warning
        message: Instance {{`{{$labels.instance}}`}} Used more than 80% of max connections
          limited
        metric: mysql_global_status_max_used_connections
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Used more than 80% of max connections
          limited
      expr: mysql_global_status_max_used_connections{service='{{ include "mysql.fullname" . }}'} > mysql_global_variables_max_connections{service='{{ include "mysql.fullname" . }}'}
        * 0.8
      for: 1m
      labels:
        severity: warning
    - alert: MySQLInnoDBForceRecoveryIsEnabled
      annotations:
        alertLevel: warning
        message: InnoDB Force Recovery is enabled. This mode should be used for data
          recovery purposes only. It prohibits writing to the data.
        metric: mysql_global_variables_innodb_force_recovery
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} InnoDB Force Recovery is enabled
      expr: mysql_global_variables_innodb_force_recovery{service='{{ include "mysql.fullname" . }}'} != 0
      for: 1m
      labels:
        severity: warning
    - alert: MySQLInnoDBLogFileSizeIsTooSmall
      annotations:
        alertLevel: warning
        message: The InnoDB Log File size is possibly too small. Choosing a small
          InnoDB Log File size can have significant performance impacts.
        metric: mysql_global_variables_innodb_log_file_size
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} InnoDB Log File size is too small
      expr: mysql_global_variables_innodb_log_file_size{service='{{ include "mysql.fullname" . }}'} < 16777216
      for: 1m
      labels:
        severity: warning
    - alert: MySQLTableDefinitionCacheTooSmall
      annotations:
        alertLevel: info
        message: Your Table Definition Cache is possibly too small. If it is much
          too small this can have significant performance impacts!
        metric: mysql_global_status_open_table_definitions
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Table definition cache too small
      expr: mysql_global_status_open_table_definitions{service='{{ include "mysql.fullname" . }}'} > mysql_global_variables_table_definition_cache{service='{{ include "mysql.fullname" . }}'}
      for: 1m
      labels:
        severity: info
    - alert: MySQLThreadStackSizeIsPossiblyTooSmall
      annotations:
        alertLevel: info
        message: Thread stack size is possibly too small. This can cause problems
          when you use Stored Language constructs for example. A typical is 256k for   thread_stack_size.
        metric: mysql_global_variables_thread_stack
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Thread stack size is possibly too
          small
      expr: mysql_global_variables_thread_stack{service='{{ include "mysql.fullname" . }}'} < 262144
      for: 1m
      labels:
        severity: info
    - alert: MySQLBinaryLogIsDisabled
      annotations:
        alertLevel: warning
        message: Binary Log is disabled. This prohibits you to do Point in Time Recovery
          (PiTR).
        metric: mysql_global_variables_log_bin
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Binary Log is disabled
      expr: mysql_global_variables_log_bin{service='{{ include "mysql.fullname" . }}'} != 1
      for: 1m
      labels:
        severity: warning
    - alert: MySQLIOThreadStopped
      annotations:
        alertLevel: critical
        message: IO thread has stopped. This is usually because it cannot connect
          to the Master any more.
        metric: mysql_slave_status_slave_io_running
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} IO thread stopped
      expr: mysql_slave_status_slave_io_running{service='{{ include "mysql.fullname" . }}'} != 1
      for: 1m
      labels:
        severity: critical
    - alert: MySQLSQLThreadStopped
      annotations:
        alertLevel: critical
        message: SQL thread has stopped. This is usually because it cannot apply a
          SQL statement received from the master.
        metric: mysql_slave_status_slave_sql_running
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} SQL thread stopped
      expr: mysql_slave_status_slave_sql_running{service='{{ include "mysql.fullname" . }}'} == 0
      for: 1m
      labels:
        severity: critical
    - alert: MySQLSQLThreadError
      annotations:
        alertLevel: critical
        message: SQL thread has stopped. This is usually because it cannot apply a
          SQL statement received from the master.
        metric: mysql_slave_status_slave_sql_running
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Sync Binlog is enabled
      expr: mysql_slave_status_slave_sql_running{service='{{ include "mysql.fullname" . }}'} != 1
      for: 1m
      labels:
        severity: critical
    - alert: MySQLSlaveLaggingBehindMaster
      annotations:
        alertLevel: warning
        message: Slave is lagging behind Master. Please check if Slave threads are
          running and if there are some performance issues!
        metric: mysql_slave_status_seconds_behind_master
        product: harmonycloud
        service: metrics
        summary: Instance {{`{{$labels.instance}}`}} Slave lagging behind Master
      expr: rate(mysql_slave_status_seconds_behind_master{service='{{ include "mysql.fullname" . }}'}[1m]) > 30
      for: 1m
      labels:
        severity: warning
{{- end }}
